/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module shift_unit_17 (
    input [15:0] a,
    input [15:0] b,
    input [5:0] alufn,
    output reg [15:0] res
  );
  
  
  
  localparam LEFT_SHIFT = 3'h0;
  
  localparam RIGHT_SHIFT = 3'h1;
  
  localparam LEFT_ARITH_SHIFT = 3'h2;
  
  localparam RIGHT_ARITH_SHIFT = 3'h3;
  
  localparam LEFT_ROTATE = 3'h4;
  
  localparam RIGHT_ROTATE = 3'h5;
  
  reg [3:0] shift_bits;
  
  reg [2:0] shift_type;
  
  always @* begin
    res = a;
    shift_bits = b[0+3-:4];
    shift_type = alufn[0+2-:3];
    
    case (shift_type)
      3'h0: begin
        res = a << shift_bits;
      end
      3'h1: begin
        res = a >> shift_bits;
      end
      3'h2: begin
        res = $signed(a) <<< shift_bits;
      end
      3'h3: begin
        res = $signed(a) >>> shift_bits;
      end
      3'h4: begin
        res = (a << shift_bits) | (a >> (5'h10 - shift_bits));
      end
      3'h5: begin
        res = (a >> shift_bits) | (a << (5'h10 - shift_bits));
      end
    endcase
  end
endmodule
