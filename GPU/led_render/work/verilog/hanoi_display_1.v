/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module hanoi_display_1 (
    input clk,
    input rst,
    input [7:0] player_position,
    input [23:0] tower_positions,
    input [63:0] enemy_positions,
    input [15:0] enemy_dirs,
    input [11:0] tower_disks,
    input [3:0] active_disk,
    output reg led
  );
  
  
  
  wire [5-1:0] M_led_matrix_x;
  wire [4-1:0] M_led_matrix_y;
  wire [9-1:0] M_led_matrix_pixel;
  wire [1-1:0] M_led_matrix_led;
  reg [1-1:0] M_led_matrix_update;
  reg [24-1:0] M_led_matrix_color;
  matrix_3 led_matrix (
    .clk(clk),
    .rst(rst),
    .update(M_led_matrix_update),
    .color(M_led_matrix_color),
    .x(M_led_matrix_x),
    .y(M_led_matrix_y),
    .pixel(M_led_matrix_pixel),
    .led(M_led_matrix_led)
  );
  
  wire [24-1:0] M_tower_color_color;
  reg [12-1:0] M_tower_color_tower_disks;
  reg [5-1:0] M_tower_color_x;
  reg [3-1:0] M_tower_color_y;
  tower_display_4 tower_color (
    .tower_positions(tower_positions),
    .tower_disks(M_tower_color_tower_disks),
    .x(M_tower_color_x),
    .y(M_tower_color_y),
    .color(M_tower_color_color)
  );
  
  wire [24-1:0] M_player_color_color;
  reg [4-1:0] M_player_color_player_disk;
  reg [5-1:0] M_player_color_x;
  reg [3-1:0] M_player_color_y;
  player_display_5 player_color (
    .player_position(player_position),
    .player_disk(M_player_color_player_disk),
    .x(M_player_color_x),
    .y(M_player_color_y),
    .color(M_player_color_color)
  );
  
  wire [24-1:0] M_enemy_color_color;
  reg [5-1:0] M_enemy_color_x;
  reg [3-1:0] M_enemy_color_y;
  enemy_display_6 enemy_color (
    .enemy_positions(enemy_positions),
    .enemy_dirs(enemy_dirs),
    .x(M_enemy_color_x),
    .y(M_enemy_color_y),
    .color(M_enemy_color_color)
  );
  
  always @* begin
    M_led_matrix_update = 1'h1;
    led = M_led_matrix_led;
    M_tower_color_x = M_led_matrix_x;
    M_tower_color_y = M_led_matrix_y;
    M_tower_color_tower_disks = tower_disks;
    M_player_color_x = M_led_matrix_x;
    M_player_color_y = M_led_matrix_y;
    M_player_color_player_disk = active_disk;
    M_enemy_color_x = M_led_matrix_x;
    M_enemy_color_y = M_led_matrix_y;
    if (M_enemy_color_color == 24'h00ff00) begin
      M_led_matrix_color = M_enemy_color_color;
    end else begin
      M_led_matrix_color = (M_tower_color_color ^ M_player_color_color);
    end
  end
endmodule
