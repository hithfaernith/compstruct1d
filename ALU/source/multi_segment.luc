module multi_segment (
    input clk,  // clock
    input rst,  // reset
    input number[16],
    input decimal[4],
    output seg_out1[8],
    output seg_out2[8],
    output seg_out3[8],
    output seg_out4[8]
  ) {
  
  segment_decoder decoder1(
    .clk(clk), .rst(rst), .segment_no(2b00), .decimal(decimal[0]), .clear(b0)
  ); segment_decoder decoder2(
    .clk(clk), .rst(rst), .segment_no(2b00), .decimal(decimal[1]), .clear(b0)
  ); segment_decoder decoder3(
    .clk(clk), .rst(rst), .segment_no(2b00), .decimal(decimal[2]), .clear(b0)
  ); segment_decoder decoder4(
    .clk(clk), .rst(rst), .segment_no(2b00), .decimal(decimal[3]), .clear(b0)
  );

  always {
    decoder1.segment_digit = number[3:0];
    seg_out1 = decoder1.io_out;
    decoder2.segment_digit = number[7:4];
    seg_out2 = decoder2.io_out;
    decoder3.segment_digit = number[11:8];
    seg_out3 = decoder3.io_out;
    decoder4.segment_digit = number[15:12];
    seg_out4 = decoder4.io_out;
  }
}
